import java.util.regex.Matcher
import java.util.regex.Pattern

def localProperties = loadPropertiesFile('local.properties')
def keystoreProperties = loadPropertiesFile('key.properties')

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def loadPropertiesFile(String fileName) {
    println(fileName)
    def properties = new Properties()
    def propertiesFile = rootProject.file(fileName)
    if (propertiesFile.exists()) {
        propertiesFile.withReader('UTF-8') { reader ->
            properties.load(reader)
        }
    }
    return properties
}

def getCurrentFlavor() {
    Gradle gradle = getGradle()
    String  tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern
    println(tskReqStr)
    if( tskReqStr.contains( "assemble" ) )
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    else if( tskReqStr.contains("bundle") )
        pattern = Pattern.compile("bundle(\\w+)(Release|Debug)")
    else
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

    Matcher matcher = pattern.matcher( tskReqStr )

    if( matcher.find() )
        return matcher.group(1).toLowerCase()
    else
    {
        println "NO MATCH FOUND"
        return ""
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 36

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    namespace "io.igrant.data4diabetes"

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "io.igrant.data4diabetes"
        minSdkVersion 28
        targetSdkVersion 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    lintOptions {
        checkReleaseBuilds false
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['password']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['password']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
        buildConfig = true
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/NOTICE', 'META-INF/DEPENDENCIES', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

flutter {
    source '../..'
    target "lib/main_" + getCurrentFlavor() + ".dart"
}

dependencies {
    implementation fileTree(dir: "libs", include: ['*.jar','*.aar'])
    implementation project(':libphonenumber_plugin')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.android.gms:play-services-mlkit-barcode-scanning:18.3.0"
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation "com.github.L3-iGrant:data_wallet:2025.10.1"


    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'
//    implementation 'com.github.L3-iGrant:mobileSDK-android:2.5.2'
    implementation "com.github.L3-iGrant:privacy-dashboard-android:2025.10.1"

    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    implementation 'com.cocosw:bottomsheet:1.5.0'
    implementation 'com.github.markomilos:paginate:1.0.0'
    implementation 'com.github.marlonlom:timeago:4.0.3'

    implementation 'org.hyperledger:indy:1.16.0'
    implementation 'net.java.dev.jna:jna:5.6.0'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'commons-io:commons-io:2.8.0'
    //retrofit
    //retrofit and services
    implementation('com.squareup.retrofit2:retrofit:2.7.1') {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation 'com.squareup.okhttp3:okhttp:4.3.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.dlazaro66.qrcodereaderview:qrcodereaderview:2.0.2'
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'com.airbnb.android:lottie:3.5.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
    annotationProcessor "org.greenrobot:eventbus-annotation-processor:3.1.1"
    implementation 'com.github.koushikcse:LoadingButton:1.7'
    implementation 'com.github.mediapark-pk:Base58-android:0.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'com.tbuonomo:dotsindicator:4.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.github.amoskorir:avatarimagegenerator:1.5.0'
    implementation 'com.github.decentralised-dataexchange:PassCodeText:2024.10.1'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.21'
    implementation 'io.github.erdtman:java-json-canonicalization:1.1'
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'

    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'com.google.http-client:google-http-client-gson:1.26.0'
    implementation 'com.google.api-client:google-api-client-android:1.26.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev136-1.25.0'
    implementation 'com.google.android.gms:play-services-auth:20.4.1'

    implementation ('androidx.work:work-runtime-ktx:2.8.0'){
        //Needed due to a transitive dependency clash with the google api client dep
        exclude group: 'com.google.guava', module:'listenablefuture'
    }

    implementation 'com.auth0:java-jwt:3.18.2'

    implementation 'com.jayway.jsonpath:json-path:2.8.0'

    implementation 'com.guolindev.permissionx:permissionx:1.6.1'
    implementation 'com.github.decentralised-dataexchange:PassCodeText:2024.10.1'

    implementation("com.github.decentralised-dataexchange:presentation-exchange-sdk-android:2024.11.1")
    implementation("org.slf4j:slf4j-api") {
        version {
            strictly("2.0.9")
        }
    }
    implementation 'com.github.amoskorir:avatarimagegenerator:1.5.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    implementation ('com.google.crypto.tink:tink-android:1.5.0'){
        exclude group: 'com.google.protobuf', module: 'protobuf-java'
    }
    implementation("co.nstant.in:cbor:0.9")
    implementation 'com.caverock:androidsvg:1.4'
    implementation ("com.google.android.play:integrity:1.4.0")
    implementation 'com.github.decentralised-dataexchange:eudi-wallet-oid4vc-android:2025.10.1'
    implementation 'com.google.android.material:material:1.12.0'
    implementation ("com.networknt:json-schema-validator:1.0.80")


    implementation("androidx.credentials.registry:registry-digitalcredentials-mdoc:1.0.0-alpha01")
    implementation("androidx.credentials.registry:registry-digitalcredentials-preview:1.0.0-alpha01")
    implementation("androidx.credentials.registry:registry-provider:1.0.0-alpha01")
    implementation("androidx.credentials.registry:registry-provider-play-services:1.0.0-alpha01")
    implementation("com.google.android.gms:play-services-identity-credentials:16.0.0-alpha06")
    implementation("androidx.credentials:credentials:1.5.0")
    implementation ("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.4")
    implementation ("com.fasterxml.jackson.module:jackson-module-kotlin:2.15.4")
    implementation("com.fasterxml.woodstox:woodstox-core:7.1.0")
    implementation ("javax.xml.stream:stax-api:1.0-2")
    implementation ("com.hbb20:ccp:2.5.1")
    implementation("androidx.browser:browser:1.9.0")
//    implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'
}
